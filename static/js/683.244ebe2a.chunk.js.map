{"version":3,"file":"static/js/683.244ebe2a.chunk.js","mappings":"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","sources":["../node_modules/react-chartjs-2/src/utils.ts","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/chart.js/dist/chunks/helpers.segment.mjs","../node_modules/chart.js/dist/chart.mjs"],"sourcesContent":["import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  Object.assign(chart.options, nextOptions);\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst keyResolvers = {\n  '': v => v,\n  x: o => o.x,\n  y: o => o.y\n};\nfunction resolveObjectKey(obj, key) {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\nfunction _getKeyResolver(key) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\nfunction _splitKey(key) {\n  const parts = key.split('.');\n  const keys = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value, last) =>\n  _lookup(table, value, last\n    ? index => table[index][key] <= value\n    : index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\nfunction _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n  return false;\n}\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(e, canvas) {\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { _isPointInArea as $, _factorize as A, finiteOrDefault as B, callback as C, _addGrace as D, _limitValue as E, toDegrees as F, _measureText as G, HALF_PI as H, _int16Range as I, _alignPixel as J, toPadding as K, clipArea as L, renderText as M, unclipArea as N, toFont as O, PI as P, each as Q, _toLeftRightCenter as R, _alignStartEnd as S, TAU as T, overrides as U, merge as V, _capitalize as W, getRelativePosition as X, _rlookupByKey as Y, _lookupByKey as Z, _arrayUnique as _, resolve as a, toLineHeight as a$, getAngleFromPoint as a0, getMaximumSize as a1, _getParentNode as a2, readUsedSize as a3, throttled as a4, supportsEventListenerOptions as a5, _isDomSupported as a6, descriptors as a7, isFunction as a8, _attachContext as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, noop as aF, distanceBetweenPoints as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, _longestText as aM, _filterBetween as aN, _lookup as aO, isPatternOrGradient as aP, getHoverColor as aQ, clone$1 as aR, _merger as aS, _mergerIf as aT, _deprecated as aU, _splitKey as aV, toFontString as aW, splineCurve as aX, splineCurveMonotone as aY, getStyle as aZ, fontString as a_, _createResolver as aa, _descriptors as ab, mergeIf as ac, uid as ad, debounce as ae, retinaScale as af, clearCanvas as ag, setsEqual as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _readValueToProps as al, _updateBezierControlPoints as am, _computeSegments as an, _boundSegments as ao, _steppedInterpolation as ap, _bezierInterpolation as aq, _pointInLine as ar, _steppedLineTo as as, _bezierCurveTo as at, drawPoint as au, addRoundedRectPath as av, toTRBL as aw, toTRBLCorners as ax, _boundSegment as ay, _normalizeAngle as az, isArray as b, PITAU as b0, INFINITY as b1, RAD_PER_DEG as b2, QUARTER_PI as b3, TWO_THIRDS_PI as b4, _angleDiff as b5, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, log10 as z };\n","/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\nexport { d as defaults } from './chunks/helpers.segment.mjs';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndex.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass ScatterController extends DatasetController {\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    if (this.options.showLine) {\n      const {dataset: line, _dataset} = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    this.updateElements(points, start, count, mode);\n  }\n  addElements() {\n    const {showLine} = this.options;\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = registry.getElement('line');\n    }\n    super.addElements();\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  init(chartOptions) {}\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {plugins, localIds};\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.9.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"names":["labels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","data","includes","push","cloneData","nextData","getDatasetAtEvent","event","getElementsAtEventForMode","nativeEvent","intersect","getElementAtEvent","getElementsAtEvent","ChartComponent","param","height","width","redraw","type","plugins","currentDataset","find","fallbackContent","updateMode","destroy","useEffect","config","setTimeout","update","canvas","dataset","role","Chart","forwardRef","createTypedChart","registerables","ref","register","Line","setOptions","LineController","Bar","value","map","nextDataset","BarController","Radar","RadarController","defaultDatasetIdKey","DoughnutController","current","reforwardRef","PolarArea","PolarAreaController","chart","nextOptions","Object","Scatter","assign","options","setLabels","currentData","nextLabels","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","_superPropBase","object","property","prototype","hasOwnProperty","getPrototypeOf","_get","Reflect","get","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","apply","this","noop","uid","id","isNullOrUndef","toString","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","each","loopable","reverse","len","keys","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone$1","source","create","klen","k","isValidKey","key","indexOf","_merger","tval","sval","merge","sources","merger","mergeIf","_mergerIf","keyResolvers","v","x","y","resolveObjectKey","obj","resolver","parts","split","tmp","_splitKey","_getKeyResolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","isNumber","isNaN","epsilon","abs","_setMinAndMaxByKey","array","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","add","from","requestAnimFrame","window","requestAnimationFrame","throttled","updateFn","updateArgs","ticking","rest","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","getUserBounds","minDefined","maxDefined","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","c","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","exec","p1","p2","hwb2rgb","hsv2rgb","names","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","nameParse","j","ok","nk","unpacked","tkeys","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","clone","proto","fromObject","input","functionParse","rgbParse","Color","ret","hexParse","_rgb","_valid","hslString","color","weight","w2","c1","c2","w1","rgb1","rgb2","interpolate","val","deg","rotate","index_esm","isPatternOrGradient","getHoverColor","saturate","darken","overrides","descriptors","getScope$1","node","root","scope","values","Defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","defaults","_scriptable","startsWith","_indexable","_fallback","_measureText","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","getContext","resetTransform","clearRect","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","left","right","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","line","opts","lines","strokeWidth","strokeColor","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","toStringTag","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","_scopes","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_cacheable","_proxy","_context","_subProxy","_stack","setContext","override","isScriptable","Error","join","delete","needsSubResolver","createSubResolver","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","readKey","prefix","constructor","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","_rootScopes","allScopes","addScopesFromKey","_getTarget","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointsLen","pointAfter","monotoneCompute","delta","pointBefore","valueAxis","iPixel","vPixel","capControlPoint","pt","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","slopeDelta","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","evt","borderBox","boxSizing","paddings","borders","touches","offsetX","offsetY","box","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","bounds","prevValue","startBound","endBound","getSegment","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","styleChanged","p0","p0DataIndex","p1DataIndex","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","anims","date","callbacks","numSteps","duration","initial","currentStep","_update","_refresh","Date","now","remaining","running","draw","_active","_total","tick","pop","_notify","charts","complete","progress","cb","_getAnims","reduce","acc","cur","_duration","cancel","animator","interpolators","boolean","factor","c0","valid","mix","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","delay","_loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","animationOptions","colors","properties","numbers","active","resize","show","animations","visible","hide","Animations","_properties","configure","animatedProps","getOwnPropertyNames","option","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","wait","all","awaitAll","then","_animateOptions","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","otherValue","singleMode","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","_stacked","addElements","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","adata","convertObjectDataToArray","isExtensible","defineProperty","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","getLabels","singleScale","xAxisKey","yAxisKey","parsedValue","NaN","canStack","otherScale","_getOtherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","disabled","toClip","defaultClip","getMaxOverflow","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","sharedOptions","_animationsDisabled","firstOpts","previouslySharedOptions","getSharedOptions","includeOptions","updateSharedOptions","_resolveAnimations","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_dataChanges","_sync","newCount","computeMinSampleSize","curr","_cache","$bar","visibleMetas","concat","getAllParsedValues","sort","getAllScaleValues","_length","updateMinAndPrev","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","iAxisKey","vAxisKey","bars","reset","getBasePixel","isHorizontal","ruler","_getRuler","_getSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","updateElement","grouped","skipNull","_getStacks","pixels","barThickness","_startPixel","_endPixel","stackCount","_getStackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","tooltip","title","innerRadius","outerRadius","getter","circumference","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_getRotationExtents","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","_dataset","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","stop","border","lastPoint","updateControlPoints","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","_fullLoop","pointPosition","getPointPositionForValue","Element","useFinalPosition","getProps","final","defaultRoutes","formatters","numeric","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","padding","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","position","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_reversePixels","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getMinMax","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","change","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","maxLabelDiagonal","numTicks","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","fullSize","generateTickLabels","_computeLabelSizes","tickFont","fontString","nestedLabel","caches","widths","heights","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getBaseValue","createTickContext","optionTicks","rot","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","positionAxisID","limit","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","lineCount","textOffset","tickAndPadding","hTickAndPadding","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","backdrop","labelPadding","fillRect","findIndex","_computeGridLineItems","drawLine","setLineDash","lineDashOffset","lastLineWidth","_computeLabelArea","_computeLabelItems","titleX","titleY","titleArgs","drawBackground","drawGrid","drawTitle","drawLabels","tz","z","gz","getSortedVisibleDatasetMetas","axisID","fontSize","TypedRegistry","isPrototypeOf","parentScope","isIChartComponent","itemDefaults","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","Registry","controllers","_typedRegistries","_each","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","registry","component","camelMethod","ScatterController","getElement","abstract","DateAdapter","chartOptions","timestamp","amount","unit","weekday","members","adapters","_date","binarySearch","metaset","lookupMethod","getRange","evaluateInteractionItems","handler","getIntersectItems","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","layout","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refit","refitBoxes","setBoxDims","placeBoxes","userPadding","autoPadding","_layers","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","handleMaxPadding","BasePlatform","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","PluginService","_init","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","localIds","getPlugin","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","getResolver","subPrefixes","needContext","subResolver","resolverCache","hasFunction","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","userConfig","initialCanvas","existingChart","chartOptionScopes","OffscreenCanvas","_detectPlatform","updateConfig","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","debounce","resizeDelay","listen","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","getScale","init","hasUpdated","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","updateIndex","ControllerClass","getController","_updateMetasets","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","remove","_stop","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","detached","_remove","isAttached","activeElements","lastActive","notify","replay","hoverOptions","deactivated","activated","updateHoverStyle","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","invalidatePlugins","clipArc","pixelMargin","angleMargin","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","outerStartX","outerStartY","outerEndX","outerEndY","inner","lineJoin","fullCircles","drawFullCircleBorders","version","unregister","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","WeakMap","positioners","average","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","boxWidth","boxHeight","bodyFont","titleFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","rtlHelper","titleColor","colorX","rtlColorX","yOffSet","colorY","usePointStyle","drawOptions","multiKeyBackground","outerX","innerX","strokeRect","textColor","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","textDirection","drawBody","drawFooter","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","_element","afterInit","_args","afterDraw","_willRender","afterEvent","handleEvent","labelCount","findOrAddLabel","addedLabels","unshift","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","getDecimalForPixel","generateTicks$1","generationOptions","dataRange","niceMin","niceMax","numSpaces","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","stepSize","computeTickLimit","getTickLimit","_maxDigits","LinearScale","handleTickRangeOptions","isMajor","tickVal","LogarithmicScale","_zero","exp","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","_padding","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","textSize","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","_parseOpts","parser","isoWeekday","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable"],"sourceRoot":""}